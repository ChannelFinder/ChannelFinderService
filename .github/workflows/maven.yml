# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots package
    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging
  test:
    permissions:
      checks: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Test with Maven
      run: mvn --batch-mode --fail-at-end test
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: '**/target/surefire-reports/TEST-*.xml'
  integrationtest:
    permissions:
      checks: write
      contents: read
    runs-on: ubuntu-latest
    services:
      elasticsearchtest:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.4
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 20s
          --health-timeout 5s
          --health-retries 20
        ports:
          # <port on host>:<port on container>
          - 9200:9200
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Clear existing docker image cache
      shell: bash
      run: docker image prune -af
    - name: Integration Test with Maven
      run: mvn clean install test-compile failsafe:integration-test failsafe:verify --batch-mode --fail-at-end -Djacoco.skip=true -DskipITs=false -DskipITCoverage=true
      env:
        EPICS_PVA_ENABLE_IP6: "false"
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: success() || failure() # always run even if the previous step fails
      with:
        report_paths: '**/target/failsafe-reports/TEST-*.xml'

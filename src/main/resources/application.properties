################## ChannelFinder Server ####################
# ChannelFinder https port
server.port=8443

# Options support for unsecure http
server.http.enable=true
server.http.port=8080

server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/newcf.p12
server.ssl.key-store-password=password
server.ssl.key-alias=cf

security.require-ssl=false

server.compression.enabled=true
# opt in to content types
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
# not worth the CPU cycles at some point, probably
server.compression.min-response-size=1024
# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true
logging.level.org.springframework.web=INFO

############## LDAP - External ##############
ldap.enabled = false
#ldap.urls = ldaps://ldap.cs.nsls2.local/dc=nsls2,dc=bnl,dc=gov
ldap.urls = ldaps://controlns02.nsls2.bnl.gov/dc=nsls2,dc=bnl,dc=gov
ldap.user.dn.pattern = uid={0},ou=People,dc=nsls2,dc=bnl,dc=gov
ldap.groups.search.base = ou=Group,dc=nsls2,dc=bnl,dc=gov
ldap.groups.search.pattern = (memberUid= {1})

############## LDAP - Embedded ##############
embedded_ldap.enabled = false
embedded_ldap.urls = ldap://localhost:8389/dc=cf,dc=local
embedded_ldap.base.dn = dc=cf,dc=local
embedded_ldap.user.dn.pattern = uid={0},ou=People
embedded_ldap.groups.search.base = ou=Group
embedded_ldap.groups.search.pattern = (memberUid= {1})
spring.ldap.embedded.ldif=classpath:cf.ldif
spring.ldap.embedded.base-dn=dc=cf,dc=local
spring.ldap.embedded.port=8389
spring.ldap.embedded.validation.enabled=false

############## Demo Auth ##############
# users, pwds, roles - lists of comma-separated values (same length)
# roles may contain multiple roles for user separated by delimiter
# e.g.
#     demo_auth.users = user1,user2
#     demo_auth.pwds = pwd1,pwd2
#     demo_auth.roles = role1,role2
#     demo_auth.roles = role1,role21:role22
demo_auth.enabled = true
demo_auth.delimiter.roles = :
demo_auth.users = admin,user
demo_auth.pwds = adminPass,userPass
demo_auth.roles = ADMIN,USER

############## Group-->Role Mapping ##############
# Customize group names here
admin-groups=cf-admins,sys-admins,ADMIN
channel-groups=cf-channels,USER
property-groups=cf-properties,USER
tag-groups=cf-tags,USER

############################## Elastic Network And HTTP ###############################

# Comma-separated list of URLs for the Elasticsearch hosts. All hosts listed
# here must belong to the same Elasticsearch cluster.
elasticsearch.host_urls=http://localhost:9200

# Old way of configuring the Elasticsearch host. Deprecated in favor of
# elasticsearch.host_urls.
elasticsearch.network.host=localhost

# Old way of configuring the Elasticsearch HTTP port. Deprecated in favor of
# elasticsearch.host_urls.
elasticsearch.http.port=9200

# Value of the Authorization header that is sent with requests to the
# Elasticsearch sever. This can be used for authentication using tokens or API
# keys.
#
# For example, for token authentication, set this to ?Bearer abcd1234?, where
# ?abcd1234? is the token. For API key authentication, set this to the Base64
# encoded version of the concatenation of the API key ID and the API key
# secret, separated by a colon. See
# https://www.elastic.co/guide/en/elasticsearch/client/java-api-client/8.12/_other_authentication_methods.html
# for details.
elasticsearch.authorization.header =

# Username and password for authentication with the Elasticsearch server. This
# is only used if elasticsearch.authorization.header is not set.
elasticsearch.authorization.username =
elasticsearch.authorization.password =

# Elasticsearch index names and types used by channelfinder, ensure that any changes here should be replicated in the mapping_definitions.sh
elasticsearch.tag.index = cf_tags
elasticsearch.property.index = cf_properties
elasticsearch.channel.index = channelfinder

# maximum query result size
# WARNING this property is used to update elastic maxResultWindow size. UPDATE  with care.
elasticsearch.query.size = 10000

# Create the Channel Finder indices if they do not exist
elasticsearch.create.indices=true

############################## Service Info ###############################
# ChannelFinder version as defined in the pom file
channelfinder.version=@project.version@

############################## REST Logging ###############################
# DEBUG level will log all requests and responses to and from the REST end points
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO

################ Archiver Appliance Configuration Processor #################
aa.urls={'default': 'http://localhost:17665'}
# Comma-separated list of archivers to use if archiver_property_name is null
aa.default_alias=default
aa.enabled=true
aa.pva=false
aa.archive_property_name=archive
aa.archiver_property_name=archiver
aa.timeout_seconds=15

# Comma-separated list of archivers to use post support
aa.post_support=

# Set the auto pause behaviour
#
# Empty for no auto pause
# Or pvStatus to pause on pvStatus=Inactive
# Or match archive_property_name to pause on archive_property_name not existing
# Or both, i.e. aa.auto_pause=pvStatus,archive
#
aa.auto_pause=


############################## Metrics ###############################
#actuator
management.endpoints.web.exposure.include=prometheus, metrics, health, info
metrics.tags=
metrics.properties=pvStatus:Active, Inactive
metrics.updateInterval=60
